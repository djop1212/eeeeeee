<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Form_Work" width="1280" height="720" titletext="Form_Work" onload="Form_Work_onload">
    <Layouts>
      <Layout width="1280" height="720" screenid="Desktop_screen">
        <Button id="Button00" taborder="0" text="조회" left="330" top="20" width="90" height="50" onclick="Button00_onclick"/>
        <Grid id="Grid00" taborder="1" left="20" top="80" width="890" height="377" autofittype="col" binddataset="ds_list" autoenter="select">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="136"/>
                <Column size="164"/>
                <Column size="170"/>
                <Column size="73"/>
                <Column size="105"/>
              </Columns>
              <Rows>
                <Row size="28" band="head"/>
                <Row size="28"/>
              </Rows>
              <Band id="head">
                <Cell text="ID"/>
                <Cell col="1" text="NAME"/>
                <Cell col="2" text="DESCRIPTION"/>
                <Cell col="3" text="USE_YN"/>
                <Cell col="4" text="REG_USER"/>
              </Band>
              <Band id="body">
                <Cell text="bind:ID" edittype="none" displaytype="normal"/>
                <Cell col="1" text="bind:NAME" edittype="normal" displaytype="editcontrol"/>
                <Cell col="2" text="bind:DESCRIPTION" edittype="normal" displaytype="editcontrol"/>
                <Cell col="3" text="bind:USE_YN" edittype="normal" displaytype="editcontrol"/>
                <Cell col="4" text="bind:REG_USER" edittype="normal" displaytype="editcontrol"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Combo id="Combo00" taborder="2" text="id" left="21" top="50" width="110" height="20" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" value="ID" index="0">
          <Dataset id="innerdataset">
            <ColumnInfo>
              <Column id="codecolumn" size="256"/>
              <Column id="datacolumn" size="256"/>
            </ColumnInfo>
            <Rows>
              <Row>
                <Col id="codecolumn">ID</Col>
                <Col id="datacolumn">id</Col>
              </Row>
              <Row>
                <Col id="codecolumn">NAME</Col>
                <Col id="datacolumn">name</Col>
              </Row>
            </Rows>
          </Dataset>
        </Combo>
        <Edit id="Edit00" taborder="3" left="140" top="50" width="150" height="20" text="Edit00"/>
        <Button id="Button01" taborder="4" text="추가" left="427" top="20" width="90" height="50" onclick="Button01_onclick"/>
        <Button id="Button02" taborder="5" text="삭제" left="525" top="20" width="90" height="50" onclick="Button02_onclick"/>
        <Button id="Button03" taborder="6" text="저장" left="622" top="20" width="90" height="50" onclick="Button03_onclick"/>
        <Button id="Button04" taborder="7" text="Export" left="720" top="20" width="90" height="50" onclick="Button04_onclick"/>
        <Button id="Button05" taborder="8" text="Import" left="818" top="20" width="90" height="50" onclick="Button05_onclick"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_search">
        <ColumnInfo>
          <Column id="searchType" type="STRING" size="256"/>
          <Column id="keyword" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_list">
        <ColumnInfo>
          <Column id="ID" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
          <Column id="DESCRIPTION" type="STRING" size="256"/>
          <Column id="USE_YN" type="STRING" size="256"/>
          <Column id="REG_USER" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[//조회버튼 클릭시
this.Button00_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnSearch(); 
};


//처리콜백 함수
this.fnCallback = function(svcID,errorCode,errorMsg)
{
	// 에러 시 화면 처리 내역
	if(errorCode != 0)
	{
		this.alert(errorCode+"\n"+errorMsg);
		return;
	}

	switch(svcID)
	{
		case "search":
			if(this.ds_list.rowcount < 1){
				this.alert("조회된 결과가 없습니다.");
			}

			break;
			
		case "save":
			this.alert("저장 되었습니다.");

			this.fnSearch();

			break;
	}
};

//데이터 조회 트랜잭션
this.fnSearch = function ()
{
	// 조회조건 셋팅
	this.ds_search.setColumn(0, "searchType", this.Combo00.value);
	this.ds_search.setColumn(0, "keyword"  , this.Edit00.text);

	var strSvcId    = "search";
	var strSvcUrl   = "svc::selectSampleList.do";
	var inData      = "input1=ds_search";
	var outData     = "ds_list=output1";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	var isAsync   	= true;

	this.transaction(strSvcId , 		// transaction을 구분하기 위한 svc id값
						strSvcUrl , 	// trabsaction을 요청할 주소
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, a=b
						callBackFnc, 	// transaction의 결과를 받을 Function 이름
						isAsync); 		// 비동기통신 여부 [생략가능]
};

//추가 버튼클릭
this.Button01_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var nRow = this.ds_list.addRow();
	this.ds_list.set_rowposition(nRow);
	this.Grid00.setCellPos(1);
	this.Grid00.showEditor(true);
};

//삭제 버튼클릭
this.Button02_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var nRow = this.ds_list.rowposition;
	this.ds_list.deleteRow(nRow);
};

//저장 버튼클릭
this.Button03_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnSave();
};

//데이터 저장 트랜잭션
this.fnSave = function()
{
	var strSvcId    = "save";
	var strSvcUrl   = "svc::updateSampleList.do";
	var inData      = "input1=ds_list:U";
	var outData     = "";
	var strArg      = "a=abc";
	var callBackFnc = "fnCallback";
	var isAsync   	= true;

	this.transaction(strSvcId , 		// transaction을 구분하기 위한 svc id값
						strSvcUrl , 	// trabsaction을 요청할 주소
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, a=b
						callBackFnc, 	// transaction의 결과를 받을 Function 이름
						isAsync); 		// 비동기통신 여부 [생략가능]
};

//서버 Xeni Excel 관련 servlet mapping 주소
this.url = nexacro.getEnvironment().services["svc"].url + "XExportImport.do";
//Export에 사용할 ExcelExportObject 변수생성
this.objExcelExport = null;
//Import에 사용할 ExcelImportObject 변수생성
this.objExcelImport = null;

//폼로드시
this.Form_Work_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	/*
		ExcelExportObject 생성
	*/
	//폼로딩후 ExcelExportObject 생성
	this.objExcelExport = new nexacro.ExcelExportObject("ExcelExportObject00",this);
	
	//생성한 오브젝트에 이벤트추가
	this.objExcelExport.addEventHandler("onprogress", this.ExcelExportObject00_onprogress, this);
	this.objExcelExport.addEventHandler("onsuccess", this.ExcelExportObject00_onsuccess, this);	
	this.objExcelExport.addEventHandler("onerror", this.ExcelExportObject00_onerror, this);		
	
	//ExcelExportObject 의 대상 Grid 및 속성설정
	this.objExcelExport.addExportItem(nexacro.ExportItemTypes.GRID, this.Grid00, "Sheet1!A1","allband","allrecord", "merge", "allstyle", "none", "none", "width");	
	this.objExcelExport.set_exportmessageprocess("%d [ %d / %d ]");
	this.objExcelExport.set_exportuitype("exportprogress");
	this.objExcelExport.set_exporteventtype("itemrecord");
    this.objExcelExport.set_exporttype(nexacro.ExportTypes.EXCEL2007);
	this.objExcelExport.set_exporturl(this.url);      
	
	this.addChild("ExcelExportObject00", this.objExcelExport);
	
	
	/*
		ExcelImpotObject 생성
	*/
	this.objExcelImport = new nexacro.ExcelImportObject("ExcelImportObject00",this); 
	//생성한 오브젝트에 이벤트추가
	this.objExcelImport.addEventHandler("onsuccess" ,this.ExcelImportObject00_onsuccess ,this);
	this.objExcelImport.addEventHandler("onerror"   ,this.ExcelImportObject00_onerror   ,this);
	this.objExcelImport.set_importtype(nexacro.ImportTypes.EXCEL2007);
	this.objExcelImport.set_importurl(this.url);	
	
	this.addChild("ExcelImportObject00", this.objExcelImport);
};

//Export 버튼클릭시
this.Button04_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//파일이름 셋팅 및 ExcelExport 실행
	this.objExcelExport.set_exportfilename("ExcelExport_Sample");
    this.objExcelExport.exportData();  
};

//Export 성공시
this.ExcelExportObject00_onsuccess = function(obj:ExportObject, e:nexacro.ExcelExportObject)
{	 
	var str = "";
	
	str += "\n=========== onsuccess event start=================";
	str += "\ne.eventid : " + e.eventid;
	str += "\ne.url: " +  e.url;	
	str += "\ne.id :"+e.id;
	str += "\ne.fromobject :"+e.fromobject;
	str += "\ne.fromreferenceobject	:"+e.fromreferenceobject;
	
	trace(str);
};

//Export 중
this.ExcelExportObject00_onprogress = function(obj:ExportObject, e:nexacro.ExcelExportObject)
{
	var str = "";
	
	str += "\n=========== onprogress event start================";
	str += "\ne.eventid	:"+e.eventid;
	str += "\ne.id :"+e.id;
	str += "\ne.fromobject :"+e.fromobject;
	str += "\ne.fromreferenceobject	:"+e.fromreferenceobject;
	str += "\ne.itemindex :"+e.itemindex;
	str += "\ne.itemtype :"+e.itemtype;
	str += "\ne.recordindex :"+e.recordindex;	
	
	trace(str);
};

//Export 에러시
this.ExcelExportObject00_onerror = function(obj:ExportObject, e:nexacro.ExcelExportObject)
{	
	var str = "";
	
	str += "\n=========== onerror event start===================";
	str += "\ne.eventid :"+e.eventid;
	str += "\ne.id :"+e.id;
	str += "\ne.fromobject :"+e.fromobject;
	str += "\ne.fromreferenceobject :"+e.fromreferenceobject;
	str += "\ne.errorcode :"+e.errorcode;
	str += "\ne.errormsg :"+e.errormsg;	

	trace(str);
};

//Import 버튼클릭시
this.Button05_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var sParam = "[command=getsheetdata;output=outDs;head=sheet1!A1:E1;body=sheet1!A2]";				
	var sParam2 = "[ds_list=outDs]";
	
	this.objExcelImport.importData("", sParam, sParam2);
};

//Import 성공시
this.ExcelImportObject00_onsuccess = function(obj:ImportObject, e:nexacro.ExcelImportObject)
{	 
	trace(e.url);
	trace(this.ds_list.saveXML());
};

//Import 에러시
this.ExcelImportObject00_onerror = function(obj:ImportObject, e:nexacro.ExcelImportObject)
{
    alert("업로드 실패");
	
    trace("=========== onerror event start============");
    trace("e.eventid:    "          + e.eventid);
    trace("e.fromobject: "          + e.fromobject);
    trace("e.fromreferenceobject: " + e.fromreferenceobject);
    trace("e.errorcode: "           + e.errorcode);
    trace("e.errormsg: "            + e.errormsg);
};
]]></Script>
  </Form>
</FDL>
